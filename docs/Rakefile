# frozen_string_literal: true

require 'rake/clean'
require 'yaml'
require 'stringio'

CWLS = Dir['../Workflows/*.cwl'].sort.freeze
RSTS = ['workflows.rst'].freeze
CLOBBER.include(RSTS)

# @param str   [String] heading
# @param punct [String] single-character for punctuation
# @return      [String]
def rst_heading(str, punct)
  <<~HEADING
    #{str}
    #{punct * str.length}

  HEADING
end

# @param str [String] heading
# @return    [String]
def rst_section(str)
  rst_heading(str, '=')
end

# @param str [String] heading
# @return    [String]
def rst_subsection(str)
  rst_heading(str, '-')  
end

# @param params [Hash] inputs/outputs part of CWL hash
def table(params)
  sio = StringIO.new

  sio.puts <<~LINE
    .. list-table::
      :header-rows: 1

      * - id
        - description
  LINE

  params.each do |id, val|
    sio.puts "  * - #{id}"
    sio.puts "    - #{val['label']}"
  end

  sio.puts

  sio.string
end

# Generates ReST document from workflow CWL
# @param path [String] CWL path
# @return     [String] workflow specification ReST
def specification_rst_from_workflow_cwl(path)
  sio = StringIO.new
  cwl = YAML.load_file(path)

  sio.puts rst_subsection(cwl['id'])

  sio.puts cwl['label'] 
  sio.puts

  sio.puts table(cwl['inputs'])

  sio.string
end

file 'workflows.rst' => CWLS do |t|
  warn "generating #{t.name}"
  File.open(t.name, 'w') do |f|
    f.puts rst_section('Workflows')
    f.puts

    t.prerequisites.each do |path|
      warn "loading #{path}"
      f.puts specification_rst_from_workflow_cwl(path)
    end
  end
  warn 'done'
end

desc 'build all'
task :all => RSTS
